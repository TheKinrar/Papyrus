From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Indhi Rousseau <contact@thekinrar.fr>
Date: Wed, 9 Sep 2020 00:05:06 +0200
Subject: [PATCH] Implement canSeePlayerEntities API


diff --git a/src/main/java/net/minecraft/server/level/PlayerChunkMap.java b/src/main/java/net/minecraft/server/level/PlayerChunkMap.java
index 6835401bd7863bbd655502547a9fd4ae0f298da1..c84782c83821b7565faeff1c633f4e614948bf84 100644
--- a/src/main/java/net/minecraft/server/level/PlayerChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/PlayerChunkMap.java
@@ -2483,7 +2483,7 @@ Sections go from 0..16. Now whenever a section is not empty, it can potentially
                     // CraftBukkit start - respect vanish API
                     if (this.tracker instanceof EntityPlayer) {
                         Player player = ((EntityPlayer) this.tracker).getBukkitEntity();
-                        if (!entityplayer.getBukkitEntity().canSee(player)) {
+                        if (!entityplayer.getBukkitEntity().canSeePlayerEntity(player)) {
                             flag1 = false;
                         }
                     }
diff --git a/src/main/java/net/minecraft/server/level/WorldServer.java b/src/main/java/net/minecraft/server/level/WorldServer.java
index f68a252378a94c8fcab622d2d89d738aceab45a4..83066513d7d618d599d03e6ff6b5fd84d612fbfa 100644
--- a/src/main/java/net/minecraft/server/level/WorldServer.java
+++ b/src/main/java/net/minecraft/server/level/WorldServer.java
@@ -1648,7 +1648,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
                 double d2 = (double) blockposition.getZ() - entityplayer.locZ();
 
                 // CraftBukkit start
-                if (entityhuman != null && entityhuman instanceof EntityPlayer && !entityplayer.getBukkitEntity().canSee(((EntityPlayer) entityhuman).getBukkitEntity())) {
+                if (entityhuman != null && entityhuman instanceof EntityPlayer && !entityplayer.getBukkitEntity().canSeePlayerEntity(((EntityPlayer) entityhuman).getBukkitEntity())) {
                     continue;
                 }
                 // CraftBukkit end
@@ -1822,7 +1822,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
 
         for (EntityHuman entityhuman : receivers) { // Paper - Particle API Expansion
             EntityPlayer entityplayer = (EntityPlayer) entityhuman; // Paper - Particle API Expansion
-            if (sender != null && !entityplayer.getBukkitEntity().canSee(sender.getBukkitEntity())) continue; // CraftBukkit
+            if (sender != null && !entityplayer.getBukkitEntity().canSeePlayerEntity(sender.getBukkitEntity())) continue; // CraftBukkit
 
             if (this.a(entityplayer, force, d0, d1, d2, packetplayoutworldparticles)) { // CraftBukkit
                 ++j;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/IProjectile.java b/src/main/java/net/minecraft/world/entity/projectile/IProjectile.java
index 8fe98404ebb8b3b5d1fdac0896b27da10736026d..01c56ee399834d2ffe5e60e9c23149610be21bd5 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/IProjectile.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/IProjectile.java
@@ -174,7 +174,7 @@ public abstract class IProjectile extends Entity {
             if (entity1 instanceof EntityPlayer && entity instanceof EntityPlayer) {
                 org.bukkit.entity.Player collided = (org.bukkit.entity.Player) entity.getBukkitEntity();
                 org.bukkit.entity.Player shooter = (org.bukkit.entity.Player) entity1.getBukkitEntity();
-                if (!shooter.canSee(collided)) return false;
+                if (!shooter.canSeePlayerEntity(collided)) return false;
             }
             return entity1 == null || this.d || !entity1.isSameVehicle(entity);
             // Paper end
diff --git a/src/main/java/net/minecraft/world/level/World.java b/src/main/java/net/minecraft/world/level/World.java
index 94f735c430d6e5a068c0cdc3fff201adbdd0e7b9..fcca3d03da3a442eef85a6ccb30ca869dab5c2a1 100644
--- a/src/main/java/net/minecraft/world/level/World.java
+++ b/src/main/java/net/minecraft/world/level/World.java
@@ -287,7 +287,7 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
             Entity entity = entities.get(i);
 
             if (checkCanSee && source instanceof EntityPlayer && entity instanceof EntityPlayer
-                && !((EntityPlayer) source).getBukkitEntity().canSee(((EntityPlayer) entity).getBukkitEntity())) {
+                && !((EntityPlayer) source).getBukkitEntity().canSeePlayerEntity(((EntityPlayer) entity).getBukkitEntity())) {
                 continue;
             }
 
diff --git a/src/main/java/net/minecraft/world/level/saveddata/maps/WorldMap.java b/src/main/java/net/minecraft/world/level/saveddata/maps/WorldMap.java
index 97fe61dcd066ec0ee05e81fc22409d6aa6b3a6d5..d9c59efb543b9d8765bde0807ec628ad28688c36 100644
--- a/src/main/java/net/minecraft/world/level/saveddata/maps/WorldMap.java
+++ b/src/main/java/net/minecraft/world/level/saveddata/maps/WorldMap.java
@@ -486,7 +486,7 @@ public class WorldMap extends PersistentBase {
             WorldMap.this.decorations.forEach((name, mapIcon) -> {
                 // If this cursor is for a player check visibility with vanish system
                 org.bukkit.entity.Player other = org.bukkit.Bukkit.getPlayerExact(name); // Spigot
-                if (other == null || player.canSee(other)) {
+                if (other == null || player.canSeePlayerEntity(other)) {
                     icons.add(mapIcon);
                 }
             });
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index e81d23357ac346b5fe50ef526b41aa2bd3f74421..52ae22f27de2831aa4370cf89cd16ed701259f3a 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -148,6 +148,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     private final ConversationTracker conversationTracker = new ConversationTracker();
     private final Set<String> channels = new HashSet<String>();
     private final Map<UUID, Set<WeakReference<Plugin>>> hiddenPlayers = new HashMap<>();
+    private final Set<WeakReference<Plugin>> hideAllPlugins = new HashSet<>();
     private static final WeakHashMap<Plugin, WeakReference<Plugin>> pluginWeakReferences = new WeakHashMap<>();
     private int hash = 0;
     private double health = 20;
@@ -1399,9 +1400,11 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
         getHandle().playerConnection.sendPacket(new PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction.ADD_PLAYER, other));
 
-        PlayerChunkMap.EntityTracker entry = tracker.trackedEntities.get(other.getId());
-        if (entry != null && !entry.trackedPlayers.contains(getHandle())) {
-            entry.updatePlayer(getHandle());
+        if(canSeePlayerEntities()) {
+            PlayerChunkMap.EntityTracker entry = tracker.trackedEntities.get(other.getId());
+            if (entry != null && !entry.trackedPlayers.contains(getHandle())) {
+                entry.updatePlayer(getHandle());
+            }
         }
     }
     // Paper start
@@ -1458,6 +1461,59 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return !hiddenPlayers.containsKey(player.getUniqueId());
     }
 
+    @Override
+    public void hidePlayerEntities(Plugin plugin) {
+        Validate.notNull(plugin, "Plugin cannot be null");
+        Validate.isTrue(plugin.isEnabled(), "Plugin attempted to hide player entities while disabled");
+        if (getHandle().playerConnection == null) return;
+
+        if(!hideAllPlugins.isEmpty()) {
+            // Some plugins are already hiding player entities. Just mark that this
+            // plugin wants it too and end.
+            hideAllPlugins.add(getPluginWeakReference(plugin));
+            return;
+        }
+        hideAllPlugins.add(getPluginWeakReference(plugin));
+
+        PlayerChunkMap tracker = getHandle().getWorldServer().getChunkProvider().playerChunkMap;
+        for(EntityPlayer other : getHandle().getWorldServer().getPlayers()) {
+            PlayerChunkMap.EntityTracker entry = tracker.trackedEntities.get(other.getId());
+            if(entry != null) {
+                entry.clear(getHandle());
+            }
+        }
+    }
+
+    @Override
+    public void showPlayerEntities(Plugin plugin) {
+        Validate.notNull(plugin, "Plugin cannot be null");
+        if (getHandle().playerConnection == null) return;
+
+        if(hideAllPlugins.isEmpty()) return; // Player entities aren't hidden
+        hideAllPlugins.remove(getPluginWeakReference(plugin));
+        if(!hideAllPlugins.isEmpty()) return; // Some other plugins still want the player entities hidden
+
+        PlayerChunkMap tracker = getHandle().getWorldServer().getChunkProvider().playerChunkMap;
+        for(EntityPlayer other : getHandle().getWorldServer().getPlayers()) {
+            if(!hiddenPlayers.containsKey(other.getUniqueID())) { // Other might still be hidden using hidePlayer
+                PlayerChunkMap.EntityTracker entry = tracker.trackedEntities.get(other.getId());
+                if (entry != null && !entry.trackedPlayers.contains(getHandle())) {
+                    entry.updatePlayer(getHandle());
+                }
+            }
+        }
+    }
+
+    @Override
+    public boolean canSeePlayerEntities() {
+        return hideAllPlugins.isEmpty();
+    }
+
+    @Override
+    public boolean canSeePlayerEntity(Player player) {
+        return canSeePlayerEntities() && canSee(player);
+    }
+
     @Override
     public Map<String, Object> serialize() {
         Map<String, Object> result = new LinkedHashMap<String, Object>();
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index 95a46421af85e8c0debde82fe12ff4134a49fe91..45fbc4010083853f625519f61ac6c1f6db344bc6 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -1324,7 +1324,7 @@ public class CraftEventFactory {
         com.destroystokyo.paper.event.entity.ProjectileCollideEvent event = new com.destroystokyo.paper.event.entity.ProjectileCollideEvent(projectile, collided);
 
         if (projectile.getShooter() instanceof Player && collided instanceof Player) {
-            if (!((Player) projectile.getShooter()).canSee((Player) collided)) {
+            if (!((Player) projectile.getShooter()).canSeePlayerEntity((Player) collided)) {
                 event.setCancelled(true);
                 return event;
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java b/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
index 1f0b117fc961da0f8f3462ec386def7dffa026ba..f0ee3a5a24e829beb4053066be5e252646b22d3c 100644
--- a/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
+++ b/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
@@ -37,7 +37,7 @@ public class CraftMapRenderer extends MapRenderer {
         for (Object key : worldMap.decorations.keySet()) {
             // If this cursor is for a player check visibility with vanish system
             Player other = Bukkit.getPlayerExact((String) key);
-            if (other != null && !player.canSee(other)) {
+            if (other != null && !player.canSeePlayerEntity(other)) {
                 continue;
             }
 
